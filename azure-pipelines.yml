trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# 1Ô∏è‚É£ Installera NuGet
- task: NuGetToolInstaller@1

# 2Ô∏è‚É£ √Öterst√§ll beroenden med NuGet
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# Kontrollera workloads
- script: dotnet workload list
  displayName: 'Check .NET workloads'

# Restore-steg
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# 3Ô∏è‚É£ Bygg applikationen med MSBuild
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:PublishDir="$(Build.ArtifactStagingDirectory)/WebApp"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# 4Ô∏è‚É£ K√∂r tester med VSTest
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# üóúÔ∏è Skapa en ZIP av den publicerade mappen
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/WebApp'
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/WebApp.zip'

# ‚úÖ Lista artifact-mappen f√∂r att verifiera ZIP-filen
- script: dir $(Build.ArtifactStagingDirectory)
  displayName: 'Lista filer i artifact-gruppen'

# üì¶ Publicera ZIP-filen som en artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/WebApp.zip'
    artifactName: 'drop'
    publishLocation: 'Container'

# üöÄ Deploya ZIP-filen till Azure Web App
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'webApp'
    appType: 'webApp'
    WebAppName: 'BlackJack'
    package: '$(Build.ArtifactStagingDirectory)/WebApp.zip'
