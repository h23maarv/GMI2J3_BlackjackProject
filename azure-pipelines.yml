trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# 1Ô∏è‚É£ Installera r√§tt .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.0.x'

# 2Ô∏è‚É£ Installera NuGet
- task: NuGetToolInstaller@1

# 3Ô∏è‚É£ Kontrollera workloads
- script: dotnet workload list
  displayName: 'Lista .NET workloads'

# 4Ô∏è‚É£ Uppdatera workloads (om det beh√∂vs)
- script: dotnet workload update
  displayName: 'Uppdatera .NET workloads'

# 5Ô∏è‚É£ √Öterst√§ll beroenden med `dotnet restore`
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    arguments: '--force'
    projects: '**/*.csproj'

# 6Ô∏è‚É£ Bygg applikationen
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration Release'
    projects: '**/*.csproj'

# üöÄ 7Ô∏è‚É£ Publicera applikationen direkt till en ZIP-fil
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/BlackJack'

# üóúÔ∏è 8Ô∏è‚É£ Skapa en ZIP av hela publiceringen
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/BlackJack'
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/BlackJack.zip'

# üì¶ 9Ô∏è‚É£ Publicera ZIP-filen som en artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/BlackJack.zip'
    artifactName: 'drop'
    publishLocation: 'Container'

# üöÄ üîü Deploya ZIP-filen direkt till Azure Web App
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'webApp'
    appType: 'webApp'
    WebAppName: 'BlackJack'
    package: '$(Build.ArtifactStagingDirectory)/BlackJack.zip'
