@model Blackjack.Web.Models.BlackjackViewModel

<div class="blackjack-table">

    <h1>ULTRA_BLACKJACK</h1>

    @if (Model.PlayerHand == null || !Model.PlayerHand.Any())
    {
        <form asp-action="Deal" method="post" class="controls-row">
            <label for="bet">Insats:</label>
            <input type="number" name="bet" class="bet-input" min="1" value="@Model.BetAmount" step="1" />
            <button type="submit" class="btn">Dela ut kort</button>
        </form>
    }
    else
    {
        <div class="section-title">Dina kort:</div>
        <div>Summa: <span id="playerValue">@Model.PlayerHandValue</span></div>
        <div class="cards-row">
            @foreach (var card in Model.PlayerHand)
            {
                var (suitIcon, suitClass) = card.Suit switch
                {
                    Blackjack.Core.Models.Suit.Hjärter => ("♥", "red"),
                    Blackjack.Core.Models.Suit.Ruter => ("♦", "red"),
                    Blackjack.Core.Models.Suit.Spader => ("♠", "black"),
                    Blackjack.Core.Models.Suit.Klöver => ("♣", "black"),
                    _ => ("?", "black")
                };
                string rankText = card.Rank switch
                {
                    1 => "A",
                    11 => "J",
                    12 => "Q",
                    13 => "K",
                    _ => card.Rank.ToString()
                };
                <div class="card @suitClass">
                    <span class="corner-rank">@rankText</span>
                    <span class="suit">@suitIcon</span>
                </div>
            }
        </div>

        @if (!Model.IsGameOver && Model.PlayerHand.Any() && @Model.PlayerHandValue < 21)
        {
            <div class="section-title">Dealerns första kort:</div>
            <div>Summa: @(Model.DealerHand.Any() ? Model.DealerHand.First() != null ? Model.DealerHand.First().Rank > 10 ? 10 : Model.DealerHand.First().Rank == 1 ? 11 : Model.DealerHand.First().Rank : 0 : 0)</div>
            <div class="cards-row">
                @if (Model.DealerHand != null && Model.DealerHand.Any())
                {
                    var firstCard = Model.DealerHand.First();
                    var (suitIcon, suitClass) = firstCard.Suit switch
                    {
                        Blackjack.Core.Models.Suit.Hjärter => ("♥", "red"),
                        Blackjack.Core.Models.Suit.Ruter => ("♦", "red"),
                        Blackjack.Core.Models.Suit.Spader => ("♠", "black"),
                        Blackjack.Core.Models.Suit.Klöver => ("♣", "black"),
                        _ => ("?", "black")
                    };
                    string rankText = firstCard.Rank switch
                    {
                        1 => "A",
                        11 => "J",
                        12 => "Q",
                        13 => "K",
                        _ => firstCard.Rank.ToString()
                    };
                    <div class="card @suitClass">
                        <span class="corner-rank">@rankText</span>
                        <span class="suit">@suitIcon</span>
                    </div>
                }
            </div>
            <div class="controls-row">
                <form asp-action="Hit" method="post"><button type="submit" class="btn">Ta kort (Hit)</button></form>
                <form asp-action="Stand" method="post"><button type="submit" class="btn">Stanna (Stand)</button></form>
            </div>
        }
        else
        {
            <div class="section-title">Dealerns kort:</div>
            <div>Summa: <span id="dealerValue">@Model.DealerHandValue</span></div>
            <div class="cards-row">
                @foreach (var card in Model.DealerHand)
                {
                    var (suitIcon, suitClass) = card.Suit switch
                    {
                        Blackjack.Core.Models.Suit.Hjärter => ("♥", "red"),
                        Blackjack.Core.Models.Suit.Ruter => ("♦", "red"),
                        Blackjack.Core.Models.Suit.Spader => ("♠", "black"),
                        Blackjack.Core.Models.Suit.Klöver => ("♣", "black"),
                        _ => ("?", "black")
                    };
                    string rankText = card.Rank switch
                    {
                        1 => "A",
                        11 => "J",
                        12 => "Q",
                        13 => "K",
                        _ => card.Rank.ToString()
                    };
                    <div class="card @suitClass">
                        <span class="corner-rank">@rankText</span>
                        <span class="suit">@suitIcon</span>
                    </div>
                }
            </div>
            <div class="result-box">
                <h4>
                    Resultat:
                    @if (Model.Result == Blackjack.Core.Models.GameResult.PlayerWin && Model.PlayerHand.Count() == 2 && Model.PlayerHandValue == 21)

                    {
                        <span>Du fick blackjack!</span>
                    }
                    else if (Model.Result == Blackjack.Core.Models.GameResult.PlayerWin)
                    {
                        <span>Du vann!</span>
                    }
                    else if (Model.Result == Blackjack.Core.Models.GameResult.DealerWin)
                    {
                        <span>Dealern vann.</span>
                    }
                    else if (Model.Result == Blackjack.Core.Models.GameResult.Push)
                    {
                        <span>Oavgjort!</span>
                    }
                </h4>
                <div>Utbetalning: @Model.Payout kr</div>
                <div>Din vinst/förlust för handen: @(Model.Payout - Model.BetAmount > 0 ? "+" : "")@(Model.Payout - Model.BetAmount) kr</div>
                <div>Totalt resultat under sessionen: @(Model.SessionVinst > 0 ? "+" : "")@Model.SessionVinst kr</div>
                <div style="margin-top:12px;"><a asp-action="Index">Spela igen</a></div>
            </div>
        }
    }
</div>
